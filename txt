let { UserFacilityMapModel } = require("../models/userFacilityMapModel");

let { UserModel } = require("../models/userModel");
let { runQuery } = require("../config/database");

const getReisdentsOfNurseIdRepository = async (nurseId, mealType) => {
  try {
    console.log(`nurse id and meal types are ${nurseId} ${mealType}`);
    let userArray = [];
    console.log("nurse id is", nurseId);
    let query =
      "select u.*, ufm.*,imgd.*,f.facility_name from users as u left join user_facility_map as ufm on ufm.user_id = u.user_id left join image_details as imgd on imgd.resident_id = u.user_id inner join facility as f on f.facility_id = ufm.facility_id      where u.user_id !=?   and ufm.facility_id = (SELECT facility_id from user_facility_map where user_id =?) and u.user_type = 6   and DATE(imgd.created_date) = CURDATE() group by u.user_id";
    //and imgd.meal_type !=?
    // if (mealType) {
    //   query +=
    //     " and imgd.meal_type != ? and DATE(imgd.created_date) = CURDATE()";
    // }
    console.log(query); //delete

    let sqlResult = await runQuery(query, [nurseId, nurseId]);
    console.log(sqlResult); //delete

    let count = sqlResult.length;
    for (let i = 0; i < sqlResult.length; i++) {
      let model = new UserModel();
      let result = sqlResult[i];

      model.fill(
        (userId = result.user_id),
        (fullName = result.full_name),
        (phoneNumber = result.phone_number),
        (userName = result.username),
        (usertype = result.user_type),
        (userStatus = result.status),
        (lastLogin = result.last_login),
        (loggedIpAddress = result.logged_ip_address),
        (createdDate = result.created_date),
        (updatedDate = result.updated_date),
        (enrolmentId = result.enrolment_id),
        (createdBy = result.created_by),
        (updatedBy = result.updated_by),
        (facilityId = result.facility_id),
        (facilityName = result.facility_name)
      );
      value = "testing out of model";
      userArray.push(model);
    }

    return { count, userArray };
  } catch (error) {
    return false;
  }
};
module.exports = {
  getReisdentsOfNurseIdRepository,
};
